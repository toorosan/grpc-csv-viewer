linters-settings:
  dupl:
    threshold: 150
  exhaustive:
    default-signifies-exhaustive: false
  funlen:
    lines: 100
    statements: 50
  goconst:
    min-len: 2
    min-occurrences: 2
  gocyclo:
    min-complexity: 25
  golint:
    min-confidence: 0.3
  govet:
    check-shadowing: false
  lll:
    line-length: 140
  maligned:
    suggest-new: true
  nolintlint:
    allow-leading-space: true # don't require machine-readable nolint directives (i.e. with no leading space)
    allow-unused: false # report any unused nolint directives
    require-explanation: true # require an explanation for nolint directives
    require-specific: false # don't require nolint directives to be specific about which linter is being skipped

linters:
  # please, do not use `enable-all`: it's deprecated and will be removed soon.
  # inverted configuration with `enable-all` and `disable` is not scalable during updates of golangci-lint
  disable-all: true
  enable:
    - asciicheck
    - deadcode
    - dupl
    - errcheck
    - exportloopref
    - gocritic
    - gocyclo
    - godot
    - gofmt
    - goimports
    - golint
    - gosimple
    - gosec
    - govet
    - ineffassign
    - misspell
    - nakedret
    - prealloc
    - staticcheck
    - structcheck
    - stylecheck
    - typecheck
    - unconvert
    - unparam
    - unused
    - varcheck
    - vet
    - vetshadow
    - whitespace

issues:
  # Disable this option because it causes golint to hide almost all issues
  exclude-use-default: false
  # Excluding configuration per-path, per-linter, per-text and per-source
  exclude-rules:
    - path: _test\.go
      linters:
        - dupl
        - unparam
    - text: ^G302|^G601
      linters:
        - gosec
    - text: ^ST1000
      linters:
        - stylecheck
    - text: ^singleCaseSwitch|^regexpMust
      linters:
        - gocritic

# golangci.com configuration
# https://github.com/golangci/golangci/wiki/Configuration
service:
  golangci-lint-version: 1.28.x # use the fixed version to not introduce new linters unexpectedly
